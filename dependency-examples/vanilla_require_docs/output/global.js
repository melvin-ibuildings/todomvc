Ext.data.JsonP.global({"parentMixins":[],"aliases":{},"superclasses":[],"subclasses":[],"members":{"event":[],"property":[{"tagname":"property","owner":"global","name":"","id":"property-","meta":{}}],"method":[{"tagname":"method","owner":"global","name":"parseName","id":"method-parseName","meta":{}},{"tagname":"method","owner":"global","name":"useXhr","id":"method-useXhr","meta":{}}],"css_var":[],"css_mixin":[],"cfg":[]},"alternateClassNames":[],"requires":[],"statics":{"event":[],"property":[],"method":[],"css_var":[],"css_mixin":[],"cfg":[]},"tagname":"class","files":[{"href":"","filename":""}],"component":false,"html_meta":{},"mixins":[],"name":"global","html":"<div><div class='doc-contents'><p>Global variables and functions.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/text.html#global-property-' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-property-' class='name expandable'></a><span> : Object</span></div><div class='description'><div class='short'>@license RequireJS text 2.0.1 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved. ...</div><div class='long'><p>@license RequireJS text 2.0.1 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\nAvailable via the MIT or new BSD license.\nsee: http://github.com/requirejs/text for details</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-parseName' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/text.html#global-method-parseName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-parseName' class='name expandable'>parseName</a>( <span class='pre'>String name</span> ) : Object</div><div class='description'><div class='short'>Parses a resource name into its component parts. ...</div><div class='long'><p>Parses a resource name into its component parts. Resource names\nlook like: module/name.ext!strip, where the !strip part is\noptional.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>the resource name</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>with properties \"moduleName\", \"ext\" and \"strip\"\nwhere strip is a boolean.</p>\n</div></li></ul></div></div></div><div id='method-useXhr' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/text.html#global-method-useXhr' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-useXhr' class='name expandable'>useXhr</a>( <span class='pre'>String url</span> )</div><div class='description'><div class='short'>Is an URL on another domain. ...</div><div class='long'><p>Is an URL on another domain. Only works for browser use, returns\nfalse in non-browser environments. Only used to know if an\noptimized .js version of a text resource should be loaded\ninstead.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>url</span> : String<div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","uses":[],"mixedInto":[],"meta":{}});